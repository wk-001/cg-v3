spring:
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]': # 匹配所有请求
            allowedOrigins: "*" #跨域处理 允许所有的域
            allowedMethods: # 支持的方法
              - GET
              - POST
              - PUT
              - DELETE
      routes:
        - id: goods_route     #唯一标识
          uri: lb://goods     #用户请求需要路由到该服务（指定要路由的服务）；lb：负载均衡，用于服务集群，goods是微服务的名称
          predicates:         #路由断言/路由规则配置
            - Path=/api/goods/**  #所有路径中包含/api/goods的请求都会路由到指定的goods服务
          filters:
            - StripPrefix=1       #将请求中的第一个路径去掉，如/api/goods -> /goods,一个斜杠代表一个路径
            - name: RequestRateLimiter #请求数限流 名字不能随便写 ，使用默认的facatory
              args:
                key-resolver: "#{@ipKeyResolver}"     #用户身份唯一标识符，和自定义的bean名称对应
                redis-rate-limiter.replenishRate: 1   #每秒钟只能有1个请求
                redis-rate-limiter.burstCapacity: 4   #允许并发4个请求(宽限个数)
        #用户微服务
        - id: user_route
          uri: lb://user
          predicates:
            - Path=/api/user/**,/api/address/**,/api/areas/**,/api/cities/**,/api/provinces/**
          filters:
            - StripPrefix=1
        #订单微服务
        - id: order_route
          uri: lb://order
          predicates:
            - Path=/api/cart/**,/api/categoryReport/**,/api/orderConfig/**,/api/order/**,/api/orderItem/**,/api/orderLog/**,/api/preferential/**,/api/returnCause/**,/api/returnOrder/**,/api/returnOrderItem/**
          filters:
            - StripPrefix=1

  application:
    name: gateway-web
  #Redis配置
  redis:
    host: 192.168.0.167
    port: 6379

server:
  port: 8001
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
  instance:
    prefer-ip-address: true
management:
  endpoint:
    gateway:
      enabled: true
    web:
      exposure:
        include: true